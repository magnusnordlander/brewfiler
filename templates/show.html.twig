{% extends "base.html.twig" %}

{% block body %}
    <!-- As a heading -->
    <nav class="navbar navbar-light bg-light">
        <span class="navbar-brand mb-0 h1"><a href="{{ path('list_brews') }}">&laquo; Back</a></span>
    </nav>

    <figure class="highcharts-figure">
        <div id="container"></div>
    </figure>

    <section class="landing">
        <div class="container">
            <div class="row">
                <dl class="col-4 col-md-2">
                    <dt>Date and Time</dt>
                    <dd>{{ brew.startTime|date('Y-m-d H:i', 'Europe/Stockholm') }}</dd>
                </dl>
                <dl class="col-4 col-md">
                    <dt>Total brew time</dt>
                    <dd>{{ brew.totalBrewTime|round(1) }} s</dd>
                </dl>
                <dl class="col-4 col-md">
                    <dt>Drip time</dt>
                    <dd>{{ brew.dripTime|round(1) }} s</dd>
                </dl>
                <dl class="col-4 col-md">
                    <dt>Drip flow</dt>
                    <dd>{{ brew.dripFlow|round(2) }} g/s</dd>
                </dl>
                <dl class="col-4 col-md">
                    <dt>Post stop flow</dt>
                    <dd>{{ brew.postStopFlow|round(2) }} g</dd>
                </dl>
                <dl class="col-4 col-md">
                    <dt>Target ratio</dt>
                    <dd>{% if brew.targetRatioDenominator %}1:{{ brew.targetRatioDenominator|round(2) }}{% else %}N/A{% endif %}</dd>
                </dl>
                <dl class="col-4 col-md">
                    <dt>Brewed ratio</dt>
                    <dd>{% if brew.finalRatioDenominator %}1:{{ brew.finalRatioDenominator|round(2) }}{% else %}N/A{% endif %}</dd>
                </dl>
            </div>
        </div>
    </section>

    {{ form(form) }}

    <script>
        Highcharts.chart('container', {
            chart: {
                type: 'spline'
            },
            title: {
                text: 'Brew'
            },
            xAxis: {
                type: 'datetime',
                title: {
                    text: 'Time'
                },
        {% if brew.preinfusionUsed %}
                plotBands: [{
                    from: new Date({{ (brew.absolutePreinfusionTime|date('U.u') * 1000)|round }}),
                    to: new Date({{ (brew.absoluteDwellTime|date('U.u') * 1000)|round }}),
                    color: '#6CF'
                }],
        {% endif %}
                plotLines: [
                    {
                        color: '#FF0000', // Red
                        width: 2,
                        value: new Date({{ (brew.stopTime|date('U.u' )* 1000)|round }}) // Position, you'll have to translate this to the values on your x axis
                    },
                    {% if brew.firstDripTime %}
                    {
                        color: '#00FF00', // Green
                        width: 2,
                        value: new Date({{ (brew.firstDripTime|date('U.u' )* 1000)|round }}) // Position, you'll have to translate this to the values on your x axis
                    },
                    {% endif %}
                    {% if brew.lastDripTime %}
                    {
                        color: '#00FF00', // Green
                        width: 2,
                        value: new Date({{ (brew.lastDripTime|date('U.u' )* 1000)|round }}) // Position, you'll have to translate this to the values on your x axis
                    },
                    {% endif %}
                ]
            },
            yAxis: [{
                title: {
                    text: 'Brew weight'
                },
                min: 0
            },{
                title: {
                    text: 'Temperature'
                },
                min: 90
            }
            ],

            colors: ['#39F', '#06C', '#036', '#000'],

            // Define the data points. All series have a dummy year
            // of 1970/71 in order to be compared on the same x axis. Note
            // that in JavaScript, months start at 0 for January, 1 for February etc.
            series: [{
                name: "Weight",
                yAxis: 0,
                marker: {
                    enabled: false
                },
                data: [
                    {% for datapoint in brew.datapoints %}
                    {
                        x: new Date({{ (datapoint.timestamp|date('U.u') * 1000)|round }}),
                        y: {{ datapoint.weight }},
                    },
                    {% endfor %}
                ]
            },
        {
            name: "Boiler Temperature",
                yAxis: 1,
            marker: {
                enabled: false
            },
            data: [
            {% for datapoint in brew.datapoints %}
                {
                    x: new Date({{ (datapoint.timestamp|date('U.u') * 1000)|round }}),
                    y: {{ datapoint.boilerTemperature|round(1) }},
                },
            {% endfor %}
            ]
        },
                {% if brew.hasGroupTemperature %}
                {
                    name: "Group Temperature",
                    yAxis: 1,
                    marker: {
                        enabled: false
                    },
                    data: [
                        {% for datapoint in brew.datapoints %}
                        {
                            x: new Date({{ (datapoint.timestamp|date('U.u') * 1000)|round }}),
                            y: {{ datapoint.groupTemperature|round(1) }},
                        },
                        {% endfor %}
                    ]
                },
                {% endif %}
        ],

            responsive: {
                rules: [{
                    condition: {
                        maxWidth: 500
                    },
                    chartOptions: {
                        plotOptions: {
                            series: {
                                marker: {
                                    radius: 0.5
                                }
                            }
                        }
                    }
                }]
            }
        });
    </script>
{% endblock %}
